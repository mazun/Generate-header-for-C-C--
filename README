[Description]

Generate header of C++ file automatically.

[Usage]

Usage: ./gen_header filename
       ./gen_header --generate_database [option] headers
       ./gen_header --generate_inline_database [option] headers
       ./gen_header --remove_database headers
Options:
  -a    Add header to exisiting database

[Requirement]

python      (http://www.python.org/)
GNU GLOBAL  (http://www.gnu.org/software/global/global.html)
g++         (http://gcc.gnu.org/)

[Example]

$ ./gen_header --generate_database -a iostream vector list map algorithm

$ cat REP.h
#define REP(i,n) for(int i = 0; i < (n); i++)

$ cat ll.h
typedef long long ll;

$ ./gen_header --generate_inline_database -a REP.h ll.h

$ cat test.cpp
using namespace std;

int main(){
  vector<int> a;
  a.push_back(1);

  REP(i, 1) cout << a[i] << endl;
}

$ ./gen_header test.cpp

$ cat test.cpp
#include <iostream>
#include <vector>
#define REP(i,n) for(int i = 0; i < (n); i++)

using namespace std;

int main(){
  vector<int> a;
  a.push_back(1);

  REP(i, 1) cout << a[i] << endl;
}

$ cat test2.cpp
using namespace std;

int main(){
  list<int> lst;
  lst.push_back(0);
  sort(lst.begin(), lst.end());
  return 0;
}

$ cat test2.cpp
#include <algorithm>
#include <list>
using namespace std;

int main(){
  list<int> lst;
  lst.push_back(0);
  sort(lst.begin(), lst.end());
  return 0;
}

$ cat test3.cpp
int main(){
  ll a;
  return 0;
}

$ ./gen_header test3.cpp

$ cat test3.cpp
typedef long long ll;

int main(){
  ll a;
  return 0;
}
